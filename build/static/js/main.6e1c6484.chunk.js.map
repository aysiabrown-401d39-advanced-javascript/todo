{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo-connected.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","Card","Body","Form","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","min","max","custom","Button","onClick","preventDefault","handleSubmit","obj","variant","size","TodoList","list","map","Modal","Dialog","Header","closeButton","onHide","handleDelete","_id","Title","handleComplete","Badge","pill","complete","assignee","text","difficulty","todoAPI","ToDo","setList","_deleteItem","id","a","filter","i","url","axios","delete","newList","_toggleComplete","console","log","put","response","data","listItem","_getTodoItems","get","error","useEffect","Navbar","bg","Brand","length","className","post","then","catch","App","data-testid","href","Nav","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e1c6484.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\nconst TodoForm = (props) => {\n  const [item, setItem] = useState({});\n\n  const handleInputChange = e => {\n    setItem({...item,[e.target.name]: e.target.value})\n  }\n\n  const handleSubmit = e  => {\n    e.preventDefault();\n    props.handleSubmit(item)\n    const obj = {};\n    setItem({obj});\n  }\n\n  return (\n          <>\n            <Card>\n              <Card.Body>\n              <h3>Add Item</h3>\n                <Form>\n                  <Form.Group controlId=\"newToDoItem\">\n                    <Form.Label>To Do Item:</Form.Label>\n                    <Form.Control type=\"text\" name=\"text\" placeholder=\"Add To Do List Item\" onChange={handleInputChange}></Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicRangeCustom\">\n                    <Form.Label>Difficulty Rating</Form.Label>\n                    <Form.Control defaultValue=\"1\" min=\"1\" max=\"5\" name=\"difficulty\" type=\"range\" onChange={handleInputChange} custom />\n                  </Form.Group>\n                  <Form.Group controlId=\"assignTo\">\n                    <Form.Label>Assign To:</Form.Label>\n                    <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange}></Form.Control>\n                  </Form.Group>\n                  <Button onClick={handleSubmit} variant=\"primary\" size=\"sm\">\n                    Add Item\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </>\n        );\n\n}\n\n\nexport default TodoForm;\n","import React, { useState } from 'react';\n// import ListGroup from 'react-bootstrap/ListGroup'\n// import Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Modal from 'react-bootstrap/Modal'\n\n\n\nconst TodoList = (props) => {\n\n\n  return (\n    <>\n      {props.list.map(item => (\n        <Modal.Dialog>\n        <Modal.Header closeButton onHide={() => props.handleDelete(item._id)}>\n          <Modal.Title onClick = {() => props.handleComplete(item._id)}>\n            <Badge pill variant={item.complete ? \"success\": \"danger\"}>{item.complete ? \"Complete\" : \"Pending\"}</Badge>\n            {item.assignee}\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{item.text}</p>\n          <p>Difficulty: {item.difficulty}</p>\n        </Modal.Body>\n      </Modal.Dialog>\n      ))}\n    </>\n        );\n\n}\n\n\nexport default TodoList;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport './todo.scss';\n\nconst todoAPI = 'https://aysiab-basic-api-server.herokuapp.com/todo';\n\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n    axios.post(todoAPI, {\n      complete: false,\n      text: item.text,\n      difficulty: item.difficulty,\n      assignee: item.assignee,\n    }).then(response => {\n      setList([...list, response.data])\n    }).catch(e => {\n      console.log(e);\n    })\n    // item.due = new Date();\n    // fetch(todoAPI, {\n    //   method: 'post',\n    //   mode: 'cors',\n    //   cache: 'no-cache',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(item)\n    // })\n    //   .then(response => response.json())\n    //   .then(savedItem => {\n    //     setList([...list, savedItem])\n    //   })\n    //   .catch(console.error);\n  };\n\n  const _deleteItem = async (id) => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if(item._id) {\n      let url = `${todoAPI}/${id}`;\n      await axios.delete(url);\n      let newList = list.filter(i => i._id !== id);\n      setList(newList);\n    }\n  }\n\n  const _toggleComplete = async (id) => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      console.log('complete befre', item.complete)\n      item.complete ? item.complete = false : item.complete = true;\n      let url = `${todoAPI}/${id}`;\n      console.log('after', item.complete)\n      let response = await axios.put(url, { complete: item.complete}) // WHY WONT YOU UPDATE TO FALSE WHEN RE CLICKED???\n      console.log(response.data);\n      setList(list.map(listItem => listItem._id === item._id ? response.data : listItem))\n      console.log(list);\n      // fetch(url, {\n      //   method: 'put',\n      //   mode: 'cors',\n      //   cache: 'no-cache',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify(item)\n      // })\n      //   .then(response => response.json())\n      //   .then(savedItem => {\n      //     setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n      //   })\n      //   .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = async () => {\n    try {\n      var response = await axios.get(todoAPI);\n     // console.log(response); \n    } catch (e) {\n      console.error(e);\n    }\n    let newList = response.data;\n    console.log(response.data);\n\n    setList(newList);\n  };\n\n  useEffect(_getTodoItems, []); //TODO: get useEffect to update after each new list item\n\n  return (\n    <>\n        <header>\n          <Navbar bg=\"light\">\n            <Navbar.Brand>There are {list.filter(item => !item.complete).length} Items To Complete</Navbar.Brand>\n          </Navbar>\n        </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm \n          handleSubmit={_addItem}/>\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n            handleDelete={_deleteItem} \n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport ToDo from './components/todo/todo-connected.js';\n/* The following line can be included in your src/index.js or App.js file */\n\nimport './app.scss';\n\n\nconst App = (props) => {\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand data-testid=\"homelink\" href=\"/\">Home</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n      </Nav>\n    </Navbar>\n      <ToDo />\n    </>\n  )\n}\n\nexport default App;\n \n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst Main = () => {\n  return (\n    <App />\n  )\n}\n\n\n// class Main extends React.Component {\n//   render() {\n//     return <App />;\n//   }\n// }\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}