{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","Card","Body","Form","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","min","max","custom","Button","onClick","preventDefault","handleSubmit","obj","variant","size","TodoList","finished","setFinished","ListGroup","as","list","map","Item","includes","_id","id","handleComplete","className","complete","toString","eventKey","text","assignee","ToDo","setList","useEffect","difficulty","Navbar","bg","Brand","filter","length","Math","random","i","newList","listItem","App","href","Nav","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2b26f856.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\nconst TodoForm = (props) => {\n  const [item, setItem] = useState({});\n\n  const handleInputChange = e => {\n    setItem({...item,[e.target.name]: e.target.value})\n  }\n\n  const handleSubmit = e  => {\n    e.preventDefault();\n    props.handleSubmit(item);\n    const obj = {};\n    setItem({obj});\n  }\n\n  return (\n          <>\n            <Card>\n              <Card.Body>\n              <h3>Add Item</h3>\n                <Form>\n                  <Form.Group controlId=\"newToDoItem\">\n                    <Form.Label>To Do Item:</Form.Label>\n                    <Form.Control type=\"text\" name=\"text\" placeholder=\"Add To Do List Item\" onChange={handleInputChange}></Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicRangeCustom\">\n                    <Form.Label>Difficulty Rating</Form.Label>\n                    <Form.Control defaultValue=\"1\" min=\"1\" max=\"5\" name=\"difficulty\" type=\"range\" onChange={handleInputChange} custom />\n                  </Form.Group>\n                  <Form.Group controlId=\"assignTo\">\n                    <Form.Label>Assign To:</Form.Label>\n                    <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange}></Form.Control>\n                  </Form.Group>\n                  <Button onClick={handleSubmit} variant=\"primary\" size=\"sm\">\n                    Add Item\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n            {/* <form onSubmit={handleSubmit}>\n              <label>\n                <span>To Do Item</span>\n                <input\n                  name=\"text\"\n                  placeholder=\"Add To Do List Item\"\n                  onChange={handleInputChange}\n                />\n              </label>\n              <label>\n                <span>Difficulty Rating</span>\n                <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n              </label>\n              <label>\n                <span>Assigned To</span>\n                <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n              </label>\n              <button>Add Item</button>\n            </form> */}\n          </>\n        );\n\n}\n\n// class TodoForm extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { item: {} };\n//   }\n//   handleInputChange = e => {\n//     this.setState({ item: {...this.state.item, [e.target.name]: e.target.value } });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();\n//     this.props.handleSubmit(this.state.item);\n//     const item = {};\n//     this.setState({item});\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <h3>Add Item</h3>\n//         <form onSubmit={this.handleSubmit}>\n//           <label>\n//             <span>To Do Item</span>\n//             <input\n//               name=\"text\"\n//               placeholder=\"Add To Do List Item\"\n//               onChange={this.handleInputChange}\n//             />\n//           </label>\n//           <label>\n//             <span>Difficulty Rating</span>\n//             <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={this.handleInputChange} />\n//           </label>\n//           <label>\n//             <span>Assigned To</span>\n//             <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={this.handleInputChange} />\n//           </label>\n//           <button>Add Item</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n\n\nconst TodoList = (props) => {\n  const [complete, setComplete] = useState('danger')\n  const [finished, setFinished] = useState([]);\n\n  const markComplete = (id) => {\n    props.handleComplete(id);\n    setFinished([...finished, id])\n  }\n\n  return (\n    <ListGroup as=\"ul\">\n      {props.list.map(item => (\n        <ListGroup.Item \n        variant={finished.includes(item._id) ? 'success': 'danger'} \n        onClick={() => markComplete(item._id)} \n        as=\"li\" className={`complete-${item.complete.toString()}`} \n        eventKey={item._id}\n        > \n              {item.text}\n              <br></br>\n              Assigned To: {item.assignee}\n              \n      </ListGroup.Item>\n      ))}\n    </ListGroup>\n          // <ul>\n          //   {props.list.map(item => (\n          //     <li\n          //       className={`complete-${item.complete.toString()}`}\n          //       key={item._id}\n          //     >\n          //       <span onClick={() => props.handleComplete(item._id)}>\n          //         {item.text}\n          //       </span>\n          //     </li>\n          //   ))}\n          // </ul>\n        );\n\n}\n\n// class TodoList extends React.Component {\n\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.list.map(item => (\n//           <li\n//             className={`complete-${item.complete.toString()}`}\n//             key={item._id}\n//           >\n//             <span onClick={() => this.props.handleComplete(item._id)}>\n//               {item.text}\n//             </span>\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\nexport default TodoList;\n","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport './todo.scss';\n\nconst ToDo = (props) => {\n  const [list, setList] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list,item]);\n  }\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if(item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item: listItem);\n      setList(newList);\n    }\n  }\n\n  useEffect(() => {\n    let newList = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n    ];\n\n    setList(newList);\n  },[]);\n\n  return (\n          <>\n            <header>\n              <Navbar bg=\"light\">\n                <Navbar.Brand>There are {list.filter(item => !item.complete).length} Items To Complete</Navbar.Brand>\n              </Navbar>\n            </header>\n    \n            <section className=\"todo\">\n    \n              <div>\n                <TodoForm handleSubmit={addItem} />\n              </div>\n    \n              <div>\n                <TodoList\n                  list={list}\n                  handleComplete={toggleComplete}\n                />\n              </div>\n            </section>\n          </>\n        );\n}\n\n// class ToDo extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item]});\n//   };\n\n//   toggleComplete = id => {\n\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({list});\n//     }\n\n//   };\n\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n//     ];\n\n//     this.setState({list});\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//           There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n\n//         <section className=\"todo\">\n\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\n\nexport default ToDo;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport ToDo from './components/todo/todo.js';\n/* The following line can be included in your src/index.js or App.js file */\n\nimport './app.scss';\n\n\nconst App = (props) => {\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        {/* <Nav.Link href=\"#home\">Home</Nav.Link>\n        <Nav.Link href=\"#features\">Features</Nav.Link>\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link> */}\n      </Nav>\n      {/* <Form inline>\n        <Form.Control type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-light\">Search</Button>\n      </Form> */}\n    </Navbar>\n      <ToDo />\n    </>\n  )\n}\n\nexport default App;\n\n// export default class App extends React.Component {\n//   render() {\n//     return (\n//       <>\n//         <ToDo />\n//       </>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst Main = () => {\n  return (\n    <App />\n  )\n}\n\n\n// class Main extends React.Component {\n//   render() {\n//     return <App />;\n//   }\n// }\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}